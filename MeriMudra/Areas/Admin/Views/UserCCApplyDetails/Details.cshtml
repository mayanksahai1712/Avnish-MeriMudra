@model MeriMudra.Models.UserCCApplyDetail

@{
    List<MeriMudra.Models.City> city = (List<MeriMudra.Models.City>)ViewData["city"];
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    MeriMudra.Models.ApplicationStatus appStatus = ViewBag.ApplicationStatus;
    List<MeriMudra.Models.Bank> banks = (List<MeriMudra.Models.Bank>)ViewData["Banks"];
    List<MeriMudra.Models.CreditCard> CreditCards = (List<MeriMudra.Models.CreditCard>)ViewData["CreditCards"];
}

<div class="container-fluid">
    <div class="card">
        <div class="card-header">User Credit Card Apply Detail</div>
        <div class="card-body">
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">

                            @Html.DisplayNameFor(model => model.EmployerType)
                            :<span class="text-muted large">
                                @Html.Raw(Model.isMobileNumberVerify ? "Salaried" : "Self-employed")
                            </span>
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.CompanyName)
                            :<span class="text-muted large">
                                @Html.DisplayFor(model => model.CompanyName)
                            </span>
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.GrossIncomeOrNetSalary):<span class="text-muted large">
                                @Html.DisplayFor(model => model.GrossIncomeOrNetSalary)
                            </span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.Name):<span class="text-muted large">
                                @Html.DisplayFor(model => model.Name)
                            </span>
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.DOB):<span class="text-muted large">
                                @Html.Raw(Convert.ToDateTime(Model.DOB).ToString("MM/dd/yyyy").Replace("-", "/"))
                            </span>

                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.CityName):<span class="text-muted large">
                                @{
                                    string cityName = (from c in city where c.Id == Model.CityId select c.Name).FirstOrDefault();

                                }
                                @Html.DisplayFor(modelItem => cityName)
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.MobileNumber):<span class="text-muted large">
                                @Html.DisplayFor(model => model.MobileNumber)
                            </span>
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.email):<span class="text-muted large">
                                @Html.DisplayFor(model => model.email)
                            </span>
                        </div>
                        <div class="col-md-3">
                            @Html.DisplayNameFor(model => model.CreditCardMaxLimit):<span class="text-muted large">
                                @Html.DisplayFor(model => model.CreditCardMaxLimit)
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model._CreditCardWith, htmlAttributes: new { @class = "" })
                            @{
                                var CreditCardWith = Model._CreditCardWith.Split(',');

                                <span class="text-muted large">:
                                    @foreach (var item in CreditCards)
                                    {
                                        @Html.Raw(CreditCardWith.Any(s => s.Equals(item.CardId.ToString())) ? item.CardName+", " : "")
                                    }
                                </span>
                            }
                        </div>
                        <div class="col-md-3">
                            @Html.LabelFor(model => model._AccountWith, htmlAttributes: new { @class = "" })
                            @{
                                var AccountWith = Model._AccountWith.Split(',');
                                <span class="text-muted large">:
                                    @foreach (var item in banks)
                                    {
                                         @Html.Raw(AccountWith.Any(s => s.Equals(item.BankId.ToString())) ? item.Name+", " : "")
                                    }
                                </span>
                            }
                        </div>
                        <div class="col-md-3">
                           
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">
                            Mobile Number Verified:<span class="text-muted large">
                                @Html.Raw(Model.isMobileNumberVerify ? "Yes" : "No")
                            </span>
                        </div>
                        <div class="col-md-3">
                            Email Verified:<span class="text-muted large">
                                @Html.Raw(Model.isEmailVerify ? "Yes" : "No")
                            </span>
                        </div>
                        <div class="col-md-3">
                            User Active:<span class="text-muted large">
                                @Html.Raw(Model.isUserActive ? "Active" : "Not Active")
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-3">
                            Application Status:<span class="text-muted large">
                                @Html.Raw(appStatus.Status)
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-row">
                        <div class="col-md-6" style="padding-right:0;padding-left:0;">
                            <div class="col-md-2" style="padding-right:0;padding-left:0;">
                                @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-block" })

                            </div>
                        </div>
                        <div class="col-md-6" style="padding-right:0;padding-left:0;float:right;">
                            <div class="col-md-2" style="padding-right:0;padding-left:0;float:right;">
                                @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(document).ready(function () {
            $(".nav-item").removeClass("active");
            $("#CC-Applications").addClass("active");
        });
    </script>
}