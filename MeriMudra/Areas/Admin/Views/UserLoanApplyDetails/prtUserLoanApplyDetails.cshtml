@model IEnumerable<MeriMudra.Models.UserLoanApplyDetail>

@{
    List<MeriMudra.Models.City> city = (List<MeriMudra.Models.City>)ViewData["city"];
}
<div class="table-responsive">
    <table class="table table-bordered dataTable table-responsive-sm" data-export-column="6" data-export-title="User credit card detail" id="dataTable_button">

        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.EmployerType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CompanyName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GrossIncomeOrNetSalary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CityName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Intended_loan_amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)

                </th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @if (item.EmployerType.GetValueOrDefault())
                        {<label> Salaried</label>}
                        else
                        {<lable>Self-Employed</lable>}
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CompanyName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GrossIncomeOrNetSalary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @{
                            //int cityid = Convert.ToInt32(!string.IsNullOrEmpty(item.CityId) ? item.CityId : "0");
                            string citName = (from c in city where c.Id == item.CityId select c.Name).FirstOrDefault();
                            citName = string.IsNullOrEmpty(citName) ? item.CityName : citName;
                        }
                        @Html.DisplayFor(modelItem => citName)
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.Intended_loan_amount)</td>
                    <td>
                        @{ string date = "";
                            if (item.CreatedDate.HasValue) { date = item.CreatedDate.Value.ToString("dd-MMM-yyyy"); } }
                        @date
                    </td>
                    <td style="width:100px;">
                        <a href="@Url.Action("edit", new { id = item.Id })" title="edit"><i class="material-icons">edit</i></a>
                        <a href="@Url.Action("Details", new { id = item.Id })" title="detail"><i class="material-icons">visibility</i></a>
                        @*@Html.ActionLink("Delete", "Delete", new { id = item.Id })*@
                        <a href="#" data-toggle="modal" data-target="#exampleDeleteBox" style="color:red" onclick="addActionInConfirmBox('UserLoanApplyDetails', 'Delete', @item.Id);"><i class="material-icons">delete</i></a>
                    </td>
                </tr>
                            }
        </tbody>

    </table>
</div>

